prometheus:
  service:
    type: NodePort
    nodePort: null  # This will allow Kubernetes to assign an available port
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    additionalScrapeConfigs:
      - job_name: 'app-health-check'
        metrics_path: '/health'
        static_configs:
          - targets: ['web.default.svc.cluster.local:5000']
        scrape_interval: 10s
      - job_name: 'flask-app'
        metrics_path: '/metrics'
        static_configs:
          - targets: ['web.default.svc.cluster.local:5000']
        scrape_interval: 15s

grafana:
  service:
    type: NodePort
    nodePort: null  # This will allow Kubernetes to assign an available port
  persistence:
    enabled: true
    size: 10Gi

alertmanager:
  service:
    type: NodePort
    nodePort: null  # This will allow Kubernetes to assign an available port
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
  config:
    global:
      resolve_timeout: 5m
      smtp_smarthost: 'smtp.gmail.com:587'
      smtp_from: 'mouadoussalah2016@gmail.com'
      smtp_auth_username: 'mouadoussalah2016@gmail.com'
      smtp_auth_password: 'ffjv kiqc rkcx otfs'
      smtp_require_tls: true

    route:
      receiver: 'email-notifications'
      group_by: ['alertname', 'job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      routes:
        - receiver: 'email-notifications'
          matchers:
            - name: send_to_email
              value: 'true'

    receivers:
    - name: 'email-notifications'
      email_configs:
      - to: 'mouadoussalah2016@gmail.com'
        send_resolved: true
